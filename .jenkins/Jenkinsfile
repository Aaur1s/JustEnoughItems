pipeline {
    agent any
    tools {
        jdk "jdk-21"
    }

    environment {
      ORG_GRADLE_PROJECT_curseforge_apikey = credentials("jei-curseforge-key")
      ORG_GRADLE_PROJECT_modrinthToken = credentials("modrinth-auth-token")
      ORG_GRADLE_PROJECT_BUILD_NUMBER = "${env.BUILD_NUMBER}"
    }
    stages {
        stage('Clean') {
            steps {
                echo 'Cleaning Project'
                sh 'chmod +x gradlew'
                sh './gradlew clean'
            }
        }

        stage('Assemble') {
            steps {
                sh "./gradlew :Core:assemble"
                sh "./gradlew :Forge:assemble"
                sh "./gradlew :Fabric:assemble"
                sh "./gradlew :NeoForge:assemble"
                sh "./gradlew :Common:assemble"
                sh "./gradlew :CommonApi:assemble"
                sh "./gradlew :ForgeApi:assemble"
                sh "./gradlew :FabricApi:assemble"
                sh "./gradlew :NeoForgeApi:assemble"
            }
        }

        stage('Check') {
            steps {
                sh "./gradlew :Core:check"
                sh "./gradlew :Forge:check"
                sh "./gradlew :Fabric:check"
                sh "./gradlew :NeoForge:check"
                sh "./gradlew :Common:check"
                sh "./gradlew :CommonApi:check"
                sh "./gradlew :ForgeApi:check"
                sh "./gradlew :FabricApi:check"
                sh "./gradlew :NeoForgeApi:check"
            }
        }

        stage('Publish Maven') {
            steps {
                sh "./gradlew :Core:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
                sh "./gradlew :Gui:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
                sh "./gradlew :Library:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
                sh "./gradlew :Forge:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
                sh "./gradlew :Fabric:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
                sh "./gradlew :NeoForge:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
                sh "./gradlew :Common:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
                sh "./gradlew :CommonApi:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
                sh "./gradlew :ForgeApi:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
                sh "./gradlew :FabricApi:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
                sh "./gradlew :NeoForgeApi:publish -PDEPLOY_DIR=${env.MAVEN_DEPLOY_DIR}"
            }
        }

        stage('Publish CurseForge') {
            steps {
                sh "./gradlew :Fabric:publishCurseForge"
                sh "./gradlew :Forge:publishCurseForge"
                sh "./gradlew :NeoForge:publishCurseForge"
            }
        }

        stage('Publish Modrinth') {
            steps {
                sh "./gradlew :Fabric:modrinth"
                sh "./gradlew :Forge:modrinth"
                sh "./gradlew :NeoForge:modrinth"
            }
        }

        stage('Archive') {
            steps {
                junit allowEmptyResults: true, testResults: '*/build/test-results/**/*.xml'
            }
        }
    }
}
